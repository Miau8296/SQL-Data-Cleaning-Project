
SELECT *
FROM dbo.nashville

ALTER TABLE dbo.nashville
ADD Date_of_Sale Date;

UPDATE dbo.nashville
SET Date_of_Sale = CONVERT(Date,SaleDate);

---- 

SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM dbo.nashville AS a
JOIN dbo.nashville AS b
	ON A.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
WHERE a.PropertyAddress is null

UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM dbo.nashville AS a
JOIN dbo.nashville AS b
	ON A.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
WHERE a.PropertyAddress is null

-----

SELECT PropertyAddress
FROM dbo.nashville

SELECT 
PARSENAME(REPLACE(OwnerAddress, ',' , '.') , 3),
PARSENAME(REPLACE(OwnerAddress, ',' , '.') , 2),
PARSENAME(REPLACE(OwnerAddress, ',' , '.') , 1)
FROM dbo.nashville

SELECT *
FROM dbo.nashville

ALTER TABLE dbo.nashville
ADD OwnerStreetAddress VARCHAR(255);

UPDATE dbo.nashville
SET OwnerStreetAddress = PARSENAME(REPLACE(OwnerAddress, ',' , '.') , 3)

ALTER TABLE dbo.nashville
ADD OwnerCityAddress VARCHAR(255);

UPDATE dbo.nashville
SET OwnerCityAddress = PARSENAME(REPLACE(OwnerAddress, ',' , '.') , 2)

ALTER TABLE dbo.nashville
ADD OwnerStateAddress VARCHAR(255);

UPDATE dbo.nashville
SET OwnerStateAddress = PARSENAME(REPLACE(OwnerAddress, ',' , '.') , 1)

---

SELECT *
FROM dbo.nashville

SELECT DISTINCT(SoldAsVacant), COUNT(SoldAsVacant)
FROM dbo.nashville
GROUP BY SoldAsVacant
ORDER BY 2 DESC;

SELECT SoldAsVacant,
	CASE	
		WHEN SoldAsVacant = 'Y' THEN 'YES'
		WHEN SoldAsVacant = 'N' THEN 'NO'
		ELSE SoldAsVacant
		END
FROM dbo.nashville

UPDATE dbo.nashville
SET SoldAsVacant = CASE	
		WHEN SoldAsVacant = 'Y' THEN 'YES'
		WHEN SoldAsVacant = 'N' THEN 'NO'
		ELSE SoldAsVacant
		END
SELECT DISTINCT(SoldAsVacant), COUNT(SoldAsVacant)
FROM dbo.nashville
GROUP BY SoldAsVacant
ORDER BY 2 DESC;


WITH RowNumCTE AS(
SELECT *,
	ROW_NUMBER() OVER(
	PARTITION BY 
		ParcelID,
		PropertyAddress,
		SalePrice,
		SaleDate,
		LegalReference
				ORDER BY UniqueID
				) row_num	
FROM dbo.nashville)

SELECT *
FROM RowNumCTE
WHERE row_num > 1
ORDER BY PropertyAddress;

WITH RowNumCTE AS(
SELECT *,
	ROW_NUMBER() OVER(
	PARTITION BY 
		ParcelID,
		PropertyAddress,
		SalePrice,
		SaleDate,
		LegalReference
				ORDER BY UniqueID
				) row_num	
FROM dbo.nashville)

DELETE
FROM RowNumCTE
WHERE row_num > 1
--ORDER BY PropertyAddress;

---DELETED 104 DUPLICATES

SELECT *
FROM dbo.nashville

ALTER TABLE dbo.nashville
DROP COLUMN OwnerAddress,TaxDistrict, SaleDateConverted

ALTER TABLE dbo.nashville
DROP COLUMN SaleDate

--DROP UNUSED COLUMNS

SELECT *
FROM dbo.nashville
